<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>~Home~</title>
        <link rel="stylesheet" href="https://use.typekit.net/piq2hhe.css">
    </head>

    <style>
        html, body { 
            margin: 0; 
            padding: 0; 
            width: 100%; 
            height: 100%; 
            background-color:#150016;
            text-align: center;
            font-family: Roboto;
            overflow-x: hidden;
            color: #e3b6b1;
            color: #ffe3d8;
            color: white;
        }

        a { 
            text-decoration: none; 
            color: inherit;
            transition: text-shadow 0.3s ease-in-out; 
        }

        a:hover { 
            text-shadow:0 0 10px rgba(255, 255, 255, 0.8), 
                        0 0 20px rgba(255, 255, 255, 0.6), 
                        0 0 30px rgba(255, 255, 255, 0.4), 
                        0 0 40px rgba(255, 255, 255, 0.2);
        }

        .top-container {
            position: absolute; 
            top: 20px;
            left: 50%;
            transform: translateX(-50%);
            width: 90%; 
            height: 80px;
            background-color: rgb(15, 21, 21);
            text-align: center; 
            padding: 10px; 
            box-shadow: 0 -2px 5px rgba(0, 0, 0, 0.1);
            display: flex;
            align-items: center;
            color: white;
            border: solid #522c5d;
            border-radius: 24px;
        }

        .menu-container {
            position: absolute;
            right: 0;
            display: flex;
            align-items: center;
            margin-right: 30px;
            margin-bottom: 15px;
        }

        .logo {
            height: 80px;
        }


        .menu-button {
            margin-top: 15px;
            padding: 20px;
        }

        .post-container { 
            display: flex;  
            width: 95%;
            height: 450px;
            background-image: url('images/backgrounds/1.jpeg');
            background-repeat: no-repeat;
            padding-left: 20px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            overflow: hidden;
            justify-content: center; 
            align-items: center; 
            margin: 0 auto;
            border: solid #522c5d;
            border-radius: 24px; 
        }

        .image-container {
            width: 45%;
            height: auto;
            padding-right: 50px;
        }

        .image-container img {
            width: 100%;
            height: auto;
            max-width: 400px;
            border: solid white;
        }

        .post-content { 
            width: 55%;
            background-color: #845162;
            padding: 20px;
            margin-right: 20px;
            display: flex;
            flex-direction: column;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        .user-info {
            display: flex;
            justify-content: space-between;
            margin-bottom: 10px;
            font-weight: bold;
        }

        .caption-section, .comments-section {
            flex: 1;
            margin-bottom: 10px;
            padding-right: 20px;
        }

        #comments {
            padding: 10px;
            font-size: 16px;
            border-radius: 5px;
            width: 100%;
            box-sizing: border-box;
        }

        #comments:focus {
            border-color: #007BFF;
            outline: none;
        }

        .comments-section {
            display: none; 
            max-height: 160px; 
            overflow-y: auto;
        }

        .comments-list { 
            max-height: 100px; 
            overflow-y: auto; 
            margin-top: 10px; }

        .comments-section textarea {
            width: 100%;
            height: 50px;
            resize: none;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 4px;
            margin-bottom: 10px;
        }

        .post-buttons {
            display: flex;
            justify-content: flex-start;
            gap: 10px;
            margin-top: 20px;
        }

        .post-buttons button {
            padding: 10px 15px;
            border: none;
            border-radius: 4px;
            background-color: #007bff;
            color: white;
            cursor: pointer;
            transition: background-color 0.3;
            align-self: center;
            display: block;
            margin: 0 auto;
            margin-top: 10px;
        }

        .post-buttons button.liked {
            background-color: #023a75;
        }

        .comments-section button{
            padding: 10px 15px;
            border: none;
            border-radius: 4px;
            background-color: #007bff;
            color: white;
            cursor: pointer;
            transition: background-color 0.3;
            align-self: center;
            display: block;
            margin: 0 auto;
        }

        .post-buttons button:hover {
            background-color: #0056b3;
        }


        .bottom-container { 
            position: absolute; 
            bottom: 0; 
            width: 100%; 
            height: 80px;
            background-color: rgb(255, 255, 255);
            text-align: center; 
            padding: 10px; 
            box-shadow: 0 -2px 5px rgba(0,0,0,0.1);
            display: flex;
            align-items: center;
        }
    </style>

    <body>
        <!--The top logo container that's on every page-->
        <!--The top container has the logo (which is also the home button), the website's title, and sign up and login buttons-->
        <section class="top-container">
            <div class="logo-container">
                <a class="menu-button" href="/">
                    <img class="logo" src="images/logo.jpg" alt="Home">
                </a>
            </div>

            <div class="title-container">
                <h1>Tune Talk</h1>
            </div>

            <!--If the user hasn't logged in yet, this shows a login or sign up option, if they are logged in this shows a create post button and user dashboard button-->
            <div class="menu-container">
                <% if (username) { %>
                    <a class="menu-button" href="/posts/new">Post</a>
                    <a class="menu-button" href="/dashboard">Hi, <%= username %>!</a>
                <% } else { %>
                    <a class="menu-button" href="/login">Login</a>
                    <a class="menu-button" href="/signup">Sign Up</a>
                <% } %>
            </div>
        </section>

        <br><br><br><br><br><br><br><br><br><br>
        <!--Dynamically fetches every post that has been posted and displays them in a row, if you are logged in, you can read the description, like and leave a comment on any post, if you are logged out, you can read the description and see the current comments and likes on that post only-->
        <div class="posts">
            <% posts.forEach(post => { %>
                <section class="post-container">

                    <div class="image-container">
                      <!--Displays the album cover posted by the user-->
                      <img class="album-image" src="/uploads/<%= post.image %>" alt="album cover">
                    </div>
                    <div class="post-content">
                      <div class="user-info">
                        <!--Obtains the username of the person who posted this-->
                        <p>Posted by: <span class="username"><%= post.username %></span></p>
                        <p class="likes-counter">Likes: <span id="likes-count-<%= post._id %>"><%= post.likes %></span></p>
                      </div>
                      <div class="caption-section" id="caption">
                        <!--Displays the description the user gave the post-->
                        <p><%= post.description %></p>
                      </div>
                      <div class="comments-section" id="comments">
                        <form action="/post/comment/<%= post._id %>" method="POST">
                            <!--If the user is logged in, they can leave a comment-->
                            <% if (username) { %>
                                <input type="text" id="comments" name="comments" placeholder="Write your comments here!">
                                <br>
                                <button type="submit" class="post-comment-button" id="post-comment">Post</button>
                            <% } %>
                        </form>                        
                        <div class="past-comments" id="comments-list">
                            <!--Fetches every existing comment on a post and displays it-->
                            <% if (post.comments && post.comments.length > 0) { %>
                                <% post.comments.forEach(comment => { %>
                                  <p><strong><%= comment.username %></strong>: <%= comment.content %></p>
                                <% }) %>
                              <% } else { %>
                            <% } %>
                        </div>
                      </div>
                      <div class="post-buttons">
                        <button id="description-btn">Description</button>
                        <form action="/like/<%= post._id %>" method="POST">
                            <!--If the user is logged in, they can leave a like on a post, otherwise the user can only see the current number of likes-->
                            <% if (username) { %>
                                <button type="submit" id="like-btn-<%= post._id %>" class="like-btn">
                                    <% if (post.likedBy && post.likedBy.includes(userId)) { %>
                                      Unlike
                                    <% } else { %>
                                      Like
                                    <% } %>
                                  </button>
                            <% } %>
                        </form>
                        <button class="comments-btn">Comments</button>
                      </div>
                    </div>
                </section>
                <br><br><br><br>
              <% }); %>
        </div>

        <!--This is the container that every post will use-->
        <!--Contains an album image on the left side, and a post description container-->
        <!--The post description container has the user's name with a like count, a text box for the user to post a description and interactive buttons for users-->
        <!--Slightly outdated because this was my original container before implementing the dynamic information so may be slightly structured differently than the one above-->
        <section class="post-container">
            <div class="image-container">
                <img class="album-image" src="images/albums/pink-floyd.jpeg" alt="tame-impala">
            </div>

            <div class="post-content"> 
                <div class="user-info">
                    <p>Posted by: <span class="username">User123</span></p>
                    <p class="likes-counter">Likes: <span id="likes-count">0</span></p>
                </div>
                <div class="caption-section" id="caption">
                    <p>Pink Floyd goes hard</p>
                </div>
                <div class="comments-section" id="comments">
                    <form action="/post" method="POST">
                        <input type="text" for="comments" id="comments" name="comments" placeholder="Write your comments here!"></input>
                        <button type="submit" class="post-comment-button" id="post-comment">Post</button>
                    </form>
                    <div class="past-comments" id="comments-list">
                        <!--One of the coolest things, if this is working correctly which it was 12/1/24 10:31, it will load all comments posted regardless of if the page is refreshed or not using MongoDB-->
                        <!--As of 12/03/24 1:04 it was broken for a hot minute but now should be working fantastically-->
                    </div>
                </div>
                <div class="post-buttons">
                    <button id="description-btn">Description</button>
                    <button id="like-btn">Like</button>
                    <button id="comments-btn">Comments</button>
                </div>
            </div>        
        </section>
        

        <br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>

        <!--This is the container for the bottom of the page that has the About and Acknowledgements pages-->
        <section class="bottom-container">
            <div class="menu-container">
                <a class="menu-button" href="about.html">About</a>
                <a class="menu-button" href="ack.html">Acknowledgements</a>
            </div>
        </section>

        <script>
            document.addEventListener('DOMContentLoaded', function () {
                // Handle like button toggle for each post
                document.querySelectorAll('.like-btn').forEach(button => {
                    button.addEventListener('click', function () {
                        //Obtains info about the number of likes and whether or not the current user has already liked the post
                        let likesCount = this.closest('.post-container').querySelector('.likes-counter span');
                        let currentCount = parseInt(likesCount.innerText);
                        let isLiked = this.classList.contains('liked'); // Check if it's liked

                        // Unlike and Liking the post
                        if (isLiked) {
                            likesCount.innerText = currentCount - 1;
                            this.innerText = "Like";
                            this.classList.remove('liked');
                        } else {
                            likesCount.innerText = currentCount + 1;
                            this.innerText = "Liked";
                            this.classList.add('liked');
                        }
                    });
                });

                // Switches between Description and Comments for each post
                document.querySelectorAll('#description-btn').forEach(button => {
                    button.addEventListener('click', function () {
                        let post = this.closest('.post-container');
                        post.querySelector('.caption-section').style.display = 'block';
                        post.querySelector('.comments-section').style.display = 'none';
                    });
                });

                // Handles switching to the comments tab when you press the comments button, if you're logged in you can also post comments
                document.querySelectorAll('.comments-btn').forEach(button => {
                    button.addEventListener('click', function () {
                        let post = this.closest('.post-container');
                        let commentsSection = post.querySelector('.comments-section');

                        if (commentsSection.style.display === 'none' || commentsSection.style.display === '') {
                            commentsSection.style.display = 'block';
                            captionSection.style.display = 'none';
                        } else {
                            commentsSection.style.display = 'none';
                            captionSection.style.display = 'block';
                        }
                    });
                });

                // Handles posting a new comment for each individual post
                document.querySelectorAll('.post-comment-button').forEach(button => {
                    button.addEventListener('click', async (e) => {
                        e.preventDefault();
                        const form = e.target.closest('form');
                        const commentInput = form.querySelector('input[name="comments"]');
                        const commentsList = form.nextElementSibling;
                        const postId = form.action.split('/').pop();

                        if (commentInput.value.trim() === "") {
                            alert("Please write a comment.");
                            return;
                        }

                        const response = await fetch(`/post/comment/${postId}`, {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({ comments: commentInput.value })
                        });

                        if (response.ok) {
                            const newComment = await response.json();
                            commentsList.innerHTML += `<p><strong>${newComment.username}</strong>: ${newComment.content}</p>`;
                            commentInput.value = ''; // Clears the comment input field after posting a comment
                        } else {
                            console.error('Error posting comment');
                        }
                    });
                });
            });
        </script>                         
    </body>
</html>